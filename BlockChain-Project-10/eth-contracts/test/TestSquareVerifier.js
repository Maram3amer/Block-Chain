// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');
const proof = require('./proof');

// Test verification with correct proof
// Test verification with incorrect proof
// - use the contents from proof.json generated from zokrates steps
contract('Verifier', accounts => {

    const account_one = accounts[0];

    describe('Test verification', function () {
        beforeEach(async function () { 
            this.Verifier = await Verifier.new({from: account_one});
        })

        it('Test verification with correct proof', async function () { 
            const verifyTx = await this.Verifier.verifyTx.call(
                proof.proof.A,
                proof.proof.A_p,
                proof.proof.B,
                proof.proof.B_p,
                proof.proof.C,
                proof.proof.C_p,
                proof.proof.H,
                proof.proof.K,
                proof.input
            );
            assert.equal(verifyTx, true);
                    });

        it('Test verification with incorrect proof', async function () { 
            const verifyTx = await this.Verifier.verifyTx.call(
                proof.proof.A,
                proof.proof.A_p,
                proof.proof.B,
                proof.proof.B_p,
                proof.proof.C,
                proof.proof.C_p,
                proof.proof.H,
                proof.proof.K,
                [1,3]
            );
            assert.equal(verifyTx, false);
                    });
                });
            });
    
